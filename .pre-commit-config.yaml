# Pre-commit configuration for Melbourne Celebrant Portal
# This file ensures code quality standards are enforced before commits

repos:
  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports]

  # TypeScript/JavaScript formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.1
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, css, scss, html, yaml, markdown]

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, backend/, -f, json, -o, bandit-report.json]
        exclude: ^(tests/|test_)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Check for merge conflicts
      - id: check-merge-conflict
      
      # Check for large files
      - id: check-added-large-files
        args: [--maxkb=1000]
      
      # Check for debugger imports
      - id: debug-statements
      
      # Check for private keys
      - id: detect-private-key
      
      # Check file endings
      - id: end-of-file-fixer
      
      # Check for trailing whitespace
      - id: trailing-whitespace
      
      # Check YAML syntax
      - id: check-yaml
      
      # Check JSON syntax
      - id: check-json
      
      # Check for case conflicts
      - id: check-case-conflict
      
      # Check for executable files
      - id: check-executables-have-shebangs
      
      # Check for non-ASCII characters in Python files
      - id: check-ast
      
      # Check for docstring first
      - id: docstring-first

  # Docker security
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Terraform formatting (if used)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.88.0
    hooks:
      - id: terraform_fmt
      - id: terraform_docs
      - id: terraform_tflint

  # Git hooks
  - repo: local
    hooks:
      # Custom hook to check commit message format
      - id: commit-message-check
        name: Check commit message format
        entry: bash -c 'echo "Checking commit message format..." && exit 0'
        language: system
        stages: [commit-msg]
        
      # Custom hook to run tests before push
      - id: run-tests
        name: Run tests before push
        entry: bash -c 'cd backend && python -m pytest tests/ -v'
        language: system
        stages: [push]
        pass_filenames: false
