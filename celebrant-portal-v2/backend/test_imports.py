#!/usr/bin/env python3
"""
Import test script to verify all Python package imports work correctly.
"""

def test_imports():
    print("üß™ Testing Python Package Structure and Imports...")
    print("=" * 60)
    
    # Test basic imports
    try:
        import fastapi
        print("‚úÖ FastAPI imported successfully")
    except ImportError as e:
        print(f"‚ùå FastAPI import failed: {e}")
        return False
    
    try:
        import uvicorn
        print("‚úÖ Uvicorn imported successfully")
    except ImportError as e:
        print(f"‚ùå Uvicorn import failed: {e}")
        return False
    
    # Test authentication dependencies
    try:
        import passlib
        print(f"‚úÖ passlib imported successfully - Version: {passlib.__version__}")
    except ImportError as e:
        print(f"‚ùå passlib not installed: {e}")
        return False
    
    try:
        from passlib.context import CryptContext
        print("‚úÖ passlib.context imported successfully")
    except ImportError as e:
        print(f"‚ùå passlib.context import failed: {e}")
        return False
    
    try:
        import jwt
        print("‚úÖ PyJWT imported successfully")
    except ImportError as e:
        print(f"‚ùå PyJWT import failed: {e}")
        return False
    
    try:
        import argon2
        print("‚úÖ argon2-cffi imported successfully")
    except ImportError as e:
        print(f"‚ùå argon2-cffi import failed: {e}")
        return False
    
    # Test database dependencies
    try:
        import sqlalchemy
        print(f"‚úÖ SQLAlchemy imported successfully - Version: {sqlalchemy.__version__}")
    except ImportError as e:
        print(f"‚ùå SQLAlchemy import failed: {e}")
        return False
    
    try:
        import psycopg2
        print("‚úÖ psycopg2 imported successfully")
    except ImportError as e:
        print(f"‚ùå psycopg2 import failed: {e}")
        return False
    
    # Test pydantic
    try:
        import pydantic
        print(f"‚úÖ Pydantic imported successfully - Version: {pydantic.__version__}")
    except ImportError as e:
        print(f"‚ùå Pydantic import failed: {e}")
        return False
    
    # Test app imports
    try:
        from app.config import settings
        print(f"‚úÖ App config imported - Environment: {settings.environment}")
    except ImportError as e:
        print(f"‚ùå App config import failed: {e}")
        return False
    
    try:
        from app.main import app
        print(f"‚úÖ FastAPI app imported - Type: {type(app).__name__}")
    except ImportError as e:
        print(f"‚ùå FastAPI app import failed: {e}")
        return False
    
    print("üéâ ALL IMPORTS SUCCESSFUL!")
    return True

if __name__ == "__main__":
    success = test_imports()
    if success:
        print("‚úÖ DEPLOYMENT READY!")
    else:
        print("‚ùå Import tests failed - Check dependencies in requirements.txt")
